# -*- coding: utf-8 -*-
"""ARIMA Microsoft.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FiolsEZqg_nfcHqpvMQTpiuKNMbMcaTZ

Adaugarea bibliotecilor:
"""

!pip install pandas_datareader==0.10.0

import pandas_datareader as web
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
plt.style.use('fivethirtyeight')
import math
from statsmodels.tsa.arima_model import ARIMA

"""Colectarea datelor:"""

df = web.DataReader('MSFT', data_source='yahoo', start='2017-05-02', end='2022-05-02')

"""Afisarea datelor:"""

plt.figure(figsize=(10,5))
plt.title('Istoric pret de inchidere al actiunilor firmei Microsoft pe ultimii 5 ani')
plt.plot(df['Adj Close'])
plt.xlabel('Data', fontsize=18)
plt.ylabel('Pretul de inchidere in dolari ($)', fontsize=18)
plt.show()

"""Prelucrarea datelor:"""

lungime_date_antrenare = len(df)-30

training_data = df['Adj Close'][:lungime_date_antrenare]

testing_data = df['Adj Close'][lungime_date_antrenare-1:]

plt.figure(figsize=(10,5))
plt.title('Impartim datele in date de antrenare si date de testare (ultimele 30 de zile)')
plt.xlabel('Data')
plt.ylabel('Pretul de inchidere in dolari ($)')
plt.plot(training_data)
plt.plot(testing_data)
plt.legend(['Datele de antrenare', 'Datele de testare'], loc='lower right')

numar_predictii = len(testing_data)

"""Crearea modelului ARIMA si a predictiilor"""

model = ARIMA(training_data, order=(6, 1, 3))

model = model.fit()

predictii, se, conf = model.forecast(numar_predictii)

predictii = pd.Series(predictii, index=testing_data[:numar_predictii].index)

"""Afisarea predictiilor:"""

plt.figure(figsize=(12, 6))
plt.title('Predicția prețului acțiunilor firmei Microsoft folosind ARIMA')
plt.xlabel('Data')
plt.ylabel('Prețul de închidere în dolari ($)')
plt.plot(testing_data, color='orangered')
plt.plot(predictii, color='limegreen')
plt.legend(['Valoarea reală', 'Predicțiile'], loc='lower left')

plt.figure(figsize=(10, 5))
plt.title('Predicția prețului acțiunilor firmei Microsoft folosind ARIMA')
plt.xlabel('Data')
plt.ylabel('Prețul de închidere în dolari ($)')
plt.plot(training_data)
plt.plot(testing_data)
plt.plot(predictii, color='limegreen')
plt.legend(['Valoarea reală', 'Valoarea reală', 'Predicțiile'], loc='lower right')

"""Calculare MAPE:"""

mape = np.mean(np.abs(predictii - testing_data)/np.abs(testing_data))
print('Eroare procentuala media absoluta (MAPE) =', mape)